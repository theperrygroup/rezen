[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rezen"
version = "1.5.3"
description = "A Python wrapper for The Real Brokerage ReZEN API"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Trevor Hobenshield", email = "trevor@hobenshield.com"},
]
maintainers = [
    {name = "Trevor Hobenshield", email = "trevor@hobenshield.com"},
]
keywords = ["real estate", "api", "rezen", "real brokerage"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Investment",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.32.3",
    "python-dotenv>=1.0.1",
    "pydantic>=2.10.3",
    "typing-extensions>=4.12.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "responses>=0.25.4",
    "black>=24.12.0",
    "flake8>=7.1.1",
    "mypy>=1.13.0",
    "isort>=5.13.2",
    "pylint>=3.3.2",
    "types-requests>=2.32.0.20241016",
]

[project.urls]
"Homepage" = "https://github.com/theperrygroup/rezen"
"Documentation" = "https://theperrygroup.github.io/rezen/"
"Repository" = "https://github.com/theperrygroup/rezen"
"Bug Tracker" = "https://github.com/theperrygroup/rezen/issues"
"Changelog" = "https://github.com/theperrygroup/rezen/releases"

[tool.setuptools.packages.find]
where = ["."]
include = ["rezen*"]
exclude = ["tests*", "docs*", "venv*"]

[tool.setuptools.package-data]
rezen = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rezen"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=rezen --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.coverage.run]
source = ["rezen"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pydocstyle]
convention = "google"
add-ignore = ["D212", "D205"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "F841"]
